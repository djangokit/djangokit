---
# App

- name: Remove local app build directory
  tags:
    - prepare-app
    - prepare-app-clean
    - deploy-app
  file:
    path: "{{ app_build_dir }}"
    state: absent

- name: Create local app build directory for version
  tags:
    - prepare-app
    - deploy-app
  file:
    path: "{{ app_build_dir }}"
    state: directory

- name: Copy local public dotenv file to build directory
  tags:
    - prepare-app
    - prepare-copy-files
    - deploy-app
  template:
    src: "{{ root }}/.env.public"
    dest: "{{ app_build_dir }}/.env.public"

- name: Copy local env-specific dotenv file to build directory
  tags:
    - prepare-app
    - prepare-copy-files
    - deploy-app
  template:
    src: "{{ root }}/.env.{{ env }}"
    dest: "{{ app_build_dir }}/.env"

- name: Copy WSGI module to build directory
  tags:
    - prepare-app
    - prepare-copy-files
    - deploy-app
  template:
    src: "wsgi.py.j2"
    dest: "{{ app_build_dir }}/wsgi.py"

- name: Remove existing source distributions
  tags:
    - prepare-app
    - deploy-app
    - build-distributions
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ root }}/dist"
    - "{{ core_root }}/dist"
    - "{{ cli_root }}/dist"

- name: Build source distributions
  tags:
    - prepare-app
    - deploy-app
    - build-distributions
  command: poetry build --format wheel
  args:
    chdir: "{{ item }}"
  with_items:
    - "{{ root }}"
    - "{{ core_root }}"
    - "{{ cli_root }}"

- name: Copy source distributions to build directory
  tags:
    - prepare-app
    - deploy-app
    - build-distributions
  copy:
    src: "{{ item }}"
    dest: "{{ app_build_dir }}/dist/"
  with_fileglob:
    - "{{ root }}/dist/*"
    - "{{ core_root }}/dist/*"
    - "{{ cli_root }}/dist/*"

- name: Create build archive
  tags:
    - prepare-app
    - deploy-app
    - create-build-archive
  archive:
    path: "{{ app_build_dir }}"
    dest: "{{ app_build_archive }}"

# Static files

- name: Remove local static build directories
  tags:
    - prepare-static
    - prepare-static-clean
    - deploy-static
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ static_build_root }}"
    - "{{ django_static_root }}"

- name: Build client bundle
  tags:
    - prepare-static
    - prepare-static-build
    - deploy-static
  command: >
    djangokit
    --env {{ env }}
    build-client
    --minify 
  args:
    creates: "bundle.client.js"

- name: Collect Django static files
  tags:
    - prepare-app
    - deploy-app
    - collectstatic
  environment:
    - DJANGO_STATIC_ROOT: "{{ django_static_root }}"
  command: djangokit manage collectstatic
